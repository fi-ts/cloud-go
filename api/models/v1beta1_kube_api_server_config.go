// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// V1beta1KubeAPIServerConfig v1beta1 kube API server config
// swagger:model v1beta1.KubeAPIServerConfig
type V1beta1KubeAPIServerConfig struct {

	// admission plugins
	AdmissionPlugins []*V1beta1AdmissionPlugin `json:"admissionPlugins"`

	// api audiences
	APIAudiences []string `json:"apiAudiences"`

	// audit config
	AuditConfig *V1beta1AuditConfig `json:"auditConfig,omitempty"`

	// enable basic authentication
	EnableBasicAuthentication bool `json:"enableBasicAuthentication,omitempty"`

	// feature gates
	FeatureGates map[string]bool `json:"featureGates,omitempty"`

	// oidc config
	OidcConfig *V1beta1OIDCConfig `json:"oidcConfig,omitempty"`

	// runtime config
	RuntimeConfig map[string]bool `json:"runtimeConfig,omitempty"`

	// service account config
	ServiceAccountConfig *V1beta1ServiceAccountConfig `json:"serviceAccountConfig,omitempty"`
}

// Validate validates this v1beta1 kube API server config
func (m *V1beta1KubeAPIServerConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdmissionPlugins(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuditConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOidcConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceAccountConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1beta1KubeAPIServerConfig) validateAdmissionPlugins(formats strfmt.Registry) error {

	if swag.IsZero(m.AdmissionPlugins) { // not required
		return nil
	}

	for i := 0; i < len(m.AdmissionPlugins); i++ {
		if swag.IsZero(m.AdmissionPlugins[i]) { // not required
			continue
		}

		if m.AdmissionPlugins[i] != nil {
			if err := m.AdmissionPlugins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("admissionPlugins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1beta1KubeAPIServerConfig) validateAuditConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.AuditConfig) { // not required
		return nil
	}

	if m.AuditConfig != nil {
		if err := m.AuditConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("auditConfig")
			}
			return err
		}
	}

	return nil
}

func (m *V1beta1KubeAPIServerConfig) validateOidcConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.OidcConfig) { // not required
		return nil
	}

	if m.OidcConfig != nil {
		if err := m.OidcConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("oidcConfig")
			}
			return err
		}
	}

	return nil
}

func (m *V1beta1KubeAPIServerConfig) validateServiceAccountConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceAccountConfig) { // not required
		return nil
	}

	if m.ServiceAccountConfig != nil {
		if err := m.ServiceAccountConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceAccountConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1beta1KubeAPIServerConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1beta1KubeAPIServerConfig) UnmarshalBinary(b []byte) error {
	var res V1beta1KubeAPIServerConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
