// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ClusterReconcileRequest v1 cluster reconcile request
//
// swagger:model v1.ClusterReconcileRequest
type V1ClusterReconcileRequest struct {

	// the gardener shoot operation annotation to annotate the shoot with
	// Required: true
	// Enum: [maintain reconcile retry rotate-ssh-keypair]
	Operation *string `json:"operation"`
}

// Validate validates this v1 cluster reconcile request
func (m *V1ClusterReconcileRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1ClusterReconcileRequestTypeOperationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["maintain","reconcile","retry","rotate-ssh-keypair"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ClusterReconcileRequestTypeOperationPropEnum = append(v1ClusterReconcileRequestTypeOperationPropEnum, v)
	}
}

const (

	// V1ClusterReconcileRequestOperationMaintain captures enum value "maintain"
	V1ClusterReconcileRequestOperationMaintain string = "maintain"

	// V1ClusterReconcileRequestOperationReconcile captures enum value "reconcile"
	V1ClusterReconcileRequestOperationReconcile string = "reconcile"

	// V1ClusterReconcileRequestOperationRetry captures enum value "retry"
	V1ClusterReconcileRequestOperationRetry string = "retry"

	// V1ClusterReconcileRequestOperationRotateDashSSHDashKeypair captures enum value "rotate-ssh-keypair"
	V1ClusterReconcileRequestOperationRotateDashSSHDashKeypair string = "rotate-ssh-keypair"
)

// prop value enum
func (m *V1ClusterReconcileRequest) validateOperationEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1ClusterReconcileRequestTypeOperationPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1ClusterReconcileRequest) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("operation", "body", m.Operation); err != nil {
		return err
	}

	// value enum
	if err := m.validateOperationEnum("operation", "body", *m.Operation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 cluster reconcile request based on context it is used
func (m *V1ClusterReconcileRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ClusterReconcileRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ClusterReconcileRequest) UnmarshalBinary(b []byte) error {
	var res V1ClusterReconcileRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
