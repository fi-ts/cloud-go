// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1S3UsageAccumuluated v1 s3 usage accumuluated
//
// swagger:model v1.S3UsageAccumuluated
type V1S3UsageAccumuluated struct {

	// the accumulated reported number of objects of the s3 buckets in this response
	// Required: true
	Currentnumberofobjects *string `json:"currentnumberofobjects"`

	// the accumulated reported size of the s3 buckets in this response
	// Required: true
	Currentsize *string `json:"currentsize"`

	// the duration that this s3 bucket is running
	// Required: true
	Lifetime *int64 `json:"lifetime"`

	// the accumulated storage seconds of the s3 buckets in this response (byte*s)
	// Required: true
	Storageseconds *string `json:"storageseconds"`
}

// Validate validates this v1 s3 usage accumuluated
func (m *V1S3UsageAccumuluated) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrentnumberofobjects(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrentsize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifetime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageseconds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1S3UsageAccumuluated) validateCurrentnumberofobjects(formats strfmt.Registry) error {

	if err := validate.Required("currentnumberofobjects", "body", m.Currentnumberofobjects); err != nil {
		return err
	}

	return nil
}

func (m *V1S3UsageAccumuluated) validateCurrentsize(formats strfmt.Registry) error {

	if err := validate.Required("currentsize", "body", m.Currentsize); err != nil {
		return err
	}

	return nil
}

func (m *V1S3UsageAccumuluated) validateLifetime(formats strfmt.Registry) error {

	if err := validate.Required("lifetime", "body", m.Lifetime); err != nil {
		return err
	}

	return nil
}

func (m *V1S3UsageAccumuluated) validateStorageseconds(formats strfmt.Registry) error {

	if err := validate.Required("storageseconds", "body", m.Storageseconds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 s3 usage accumuluated based on context it is used
func (m *V1S3UsageAccumuluated) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1S3UsageAccumuluated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1S3UsageAccumuluated) UnmarshalBinary(b []byte) error {
	var res V1S3UsageAccumuluated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
