// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// V1ManagedFieldsEntry ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
// swagger:model v1.ManagedFieldsEntry
type V1ManagedFieldsEntry struct {

	// APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
	APIVersion string `json:"apiVersion,omitempty"`

	// Fields identifies a set of fields.
	Fields string `json:"fields,omitempty"`

	// Manager is an identifier of the workflow managing these fields.
	Manager string `json:"manager,omitempty"`

	// Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
	Operation string `json:"operation,omitempty"`

	// Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
	Time string `json:"time,omitempty"`
}

// Validate validates this v1 managed fields entry
func (m *V1ManagedFieldsEntry) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ManagedFieldsEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ManagedFieldsEntry) UnmarshalBinary(b []byte) error {
	var res V1ManagedFieldsEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
