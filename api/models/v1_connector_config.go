// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// V1ConnectorConfig v1 connector config
// swagger:model v1.ConnectorConfig
type V1ConnectorConfig struct {

	// idm access code
	IdmAccessCode string `json:"idm_access_code,omitempty"`

	// idm api password
	IdmAPIPassword string `json:"idm_api_password,omitempty"`

	// idm api url
	IdmAPIURL string `json:"idm_api_url,omitempty"`

	// idm api user
	IdmAPIUser string `json:"idm_api_user,omitempty"`

	// idm customer id
	IdmCustomerID string `json:"idm_customer_id,omitempty"`

	// idm domain name
	IdmDomainName string `json:"idm_domain_name,omitempty"`

	// idm group ou
	IdmGroupOu string `json:"idm_group_ou,omitempty"`

	// idm groupname template
	IdmGroupnameTemplate *WrappersStringValue `json:"idm_groupname_template,omitempty"`

	// idm job info
	IdmJobInfo string `json:"idm_job_info,omitempty"`

	// idm req email
	IdmReqEmail string `json:"idm_req_email,omitempty"`

	// idm req system
	IdmReqSystem string `json:"idm_req_system,omitempty"`

	// idm req user
	IdmReqUser string `json:"idm_req_user,omitempty"`

	// idm submitter
	IdmSubmitter string `json:"idm_submitter,omitempty"`

	// idm system id
	IdmSystemID string `json:"idm_system_id,omitempty"`

	// idm tenant prefix
	IdmTenantPrefix string `json:"idm_tenant_prefix,omitempty"`
}

// Validate validates this v1 connector config
func (m *V1ConnectorConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdmGroupnameTemplate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ConnectorConfig) validateIdmGroupnameTemplate(formats strfmt.Registry) error {

	if swag.IsZero(m.IdmGroupnameTemplate) { // not required
		return nil
	}

	if m.IdmGroupnameTemplate != nil {
		if err := m.IdmGroupnameTemplate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("idm_groupname_template")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1ConnectorConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ConnectorConfig) UnmarshalBinary(b []byte) error {
	var res V1ConnectorConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
