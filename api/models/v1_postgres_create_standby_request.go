// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1PostgresCreateStandbyRequest v1 postgres create standby request
//
// swagger:model v1.PostgresCreateStandbyRequest
type V1PostgresCreateStandbyRequest struct {

	// autoassigndedicatedlbipfrom
	Autoassigndedicatedlbipfrom string `json:"autoassigndedicatedlbipfrom,omitempty"`

	// backup
	Backup string `json:"backup,omitempty"`

	// dedicatedloadbalancerip
	// Required: true
	Dedicatedloadbalancerip *string `json:"dedicatedloadbalancerip"`

	// dedicatedloadbalancerport
	// Required: true
	Dedicatedloadbalancerport *int32 `json:"dedicatedloadbalancerport"`

	// description
	Description string `json:"description,omitempty"`

	// disable load balancers
	DisableLoadBalancers bool `json:"disableLoadBalancers,omitempty"`

	// labels
	Labels map[string]string `json:"labels,omitempty"`

	// maintenance
	Maintenance []string `json:"maintenance"`

	// number of instances
	NumberOfInstances int32 `json:"numberOfInstances,omitempty"`

	// partition ID
	PartitionID string `json:"partitionID,omitempty"`

	// primary Id
	// Required: true
	PrimaryID *string `json:"primaryId"`

	// storage class
	StorageClass string `json:"storageClass,omitempty"`
}

// Validate validates this v1 postgres create standby request
func (m *V1PostgresCreateStandbyRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDedicatedloadbalancerip(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDedicatedloadbalancerport(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrimaryID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1PostgresCreateStandbyRequest) validateDedicatedloadbalancerip(formats strfmt.Registry) error {

	if err := validate.Required("dedicatedloadbalancerip", "body", m.Dedicatedloadbalancerip); err != nil {
		return err
	}

	return nil
}

func (m *V1PostgresCreateStandbyRequest) validateDedicatedloadbalancerport(formats strfmt.Registry) error {

	if err := validate.Required("dedicatedloadbalancerport", "body", m.Dedicatedloadbalancerport); err != nil {
		return err
	}

	return nil
}

func (m *V1PostgresCreateStandbyRequest) validatePrimaryID(formats strfmt.Registry) error {

	if err := validate.Required("primaryId", "body", m.PrimaryID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 postgres create standby request based on context it is used
func (m *V1PostgresCreateStandbyRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1PostgresCreateStandbyRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PostgresCreateStandbyRequest) UnmarshalBinary(b []byte) error {
	var res V1PostgresCreateStandbyRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
