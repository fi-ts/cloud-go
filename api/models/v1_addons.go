// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1Addons v1 addons
// swagger:model v1.Addons
type V1Addons struct {

	// kubernetes dashboard
	// Required: true
	KubernetesDashboard *bool `json:"KubernetesDashboard"`

	// nginx ingress
	// Required: true
	NginxIngress *bool `json:"NginxIngress"`
}

// Validate validates this v1 addons
func (m *V1Addons) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKubernetesDashboard(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNginxIngress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1Addons) validateKubernetesDashboard(formats strfmt.Registry) error {

	if err := validate.Required("KubernetesDashboard", "body", m.KubernetesDashboard); err != nil {
		return err
	}

	return nil
}

func (m *V1Addons) validateNginxIngress(formats strfmt.Registry) error {

	if err := validate.Required("NginxIngress", "body", m.NginxIngress); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1Addons) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Addons) UnmarshalBinary(b []byte) error {
	var res V1Addons
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
