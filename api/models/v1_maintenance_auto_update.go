// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MaintenanceAutoUpdate v1 maintenance auto update
//
// swagger:model v1.MaintenanceAutoUpdate
type V1MaintenanceAutoUpdate struct {

	// firewall image
	// Required: true
	FirewallImage *bool `json:"FirewallImage"`

	// kubernetes version
	// Required: true
	KubernetesVersion *bool `json:"KubernetesVersion"`

	// machine image
	// Required: true
	MachineImage *bool `json:"MachineImage"`
}

// Validate validates this v1 maintenance auto update
func (m *V1MaintenanceAutoUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirewallImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKubernetesVersion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachineImage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MaintenanceAutoUpdate) validateFirewallImage(formats strfmt.Registry) error {

	if err := validate.Required("FirewallImage", "body", m.FirewallImage); err != nil {
		return err
	}

	return nil
}

func (m *V1MaintenanceAutoUpdate) validateKubernetesVersion(formats strfmt.Registry) error {

	if err := validate.Required("KubernetesVersion", "body", m.KubernetesVersion); err != nil {
		return err
	}

	return nil
}

func (m *V1MaintenanceAutoUpdate) validateMachineImage(formats strfmt.Registry) error {

	if err := validate.Required("MachineImage", "body", m.MachineImage); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 maintenance auto update based on context it is used
func (m *V1MaintenanceAutoUpdate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1MaintenanceAutoUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MaintenanceAutoUpdate) UnmarshalBinary(b []byte) error {
	var res V1MaintenanceAutoUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
