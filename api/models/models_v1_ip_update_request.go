// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsV1IPUpdateRequest models v1 IP update request
//
// swagger:model models.V1IPUpdateRequest
type ModelsV1IPUpdateRequest struct {

	// description
	Description string `json:"description,omitempty" yaml:"description,omitempty"`

	// ipaddress
	// Required: true
	Ipaddress *string `json:"ipaddress" yaml:"ipaddress"`

	// name
	Name string `json:"name,omitempty" yaml:"name,omitempty"`

	// tags
	// Required: true
	Tags []string `json:"tags" yaml:"tags"`

	// type
	// Required: true
	Type *string `json:"type" yaml:"type"`
}

// Validate validates this models v1 IP update request
func (m *ModelsV1IPUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIpaddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTags(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsV1IPUpdateRequest) validateIpaddress(formats strfmt.Registry) error {

	if err := validate.Required("ipaddress", "body", m.Ipaddress); err != nil {
		return err
	}

	return nil
}

func (m *ModelsV1IPUpdateRequest) validateTags(formats strfmt.Registry) error {

	if err := validate.Required("tags", "body", m.Tags); err != nil {
		return err
	}

	return nil
}

func (m *ModelsV1IPUpdateRequest) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models v1 IP update request based on context it is used
func (m *ModelsV1IPUpdateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsV1IPUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsV1IPUpdateRequest) UnmarshalBinary(b []byte) error {
	var res ModelsV1IPUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
