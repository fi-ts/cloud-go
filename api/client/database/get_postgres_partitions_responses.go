// Code generated by go-swagger; DO NOT EDIT.

package database

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fi-ts/cloud-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// GetPostgresPartitionsReader is a Reader for the GetPostgresPartitions structure.
type GetPostgresPartitionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPostgresPartitionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPostgresPartitionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPostgresPartitionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPostgresPartitionsOK creates a GetPostgresPartitionsOK with default headers values
func NewGetPostgresPartitionsOK() *GetPostgresPartitionsOK {
	return &GetPostgresPartitionsOK{}
}

/*
GetPostgresPartitionsOK describes a response with status code 200, with default header values.

OK
*/
type GetPostgresPartitionsOK struct {
	Payload models.V1PostgresPartitionsResponse
}

// IsSuccess returns true when this get postgres partitions o k response has a 2xx status code
func (o *GetPostgresPartitionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get postgres partitions o k response has a 3xx status code
func (o *GetPostgresPartitionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get postgres partitions o k response has a 4xx status code
func (o *GetPostgresPartitionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get postgres partitions o k response has a 5xx status code
func (o *GetPostgresPartitionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get postgres partitions o k response a status code equal to that given
func (o *GetPostgresPartitionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get postgres partitions o k response
func (o *GetPostgresPartitionsOK) Code() int {
	return 200
}

func (o *GetPostgresPartitionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/database/postgres/partitions][%d] getPostgresPartitionsOK %s", 200, payload)
}

func (o *GetPostgresPartitionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/database/postgres/partitions][%d] getPostgresPartitionsOK %s", 200, payload)
}

func (o *GetPostgresPartitionsOK) GetPayload() models.V1PostgresPartitionsResponse {
	return o.Payload
}

func (o *GetPostgresPartitionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostgresPartitionsDefault creates a GetPostgresPartitionsDefault with default headers values
func NewGetPostgresPartitionsDefault(code int) *GetPostgresPartitionsDefault {
	return &GetPostgresPartitionsDefault{
		_statusCode: code,
	}
}

/*
GetPostgresPartitionsDefault describes a response with status code -1, with default header values.

Error
*/
type GetPostgresPartitionsDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this get postgres partitions default response has a 2xx status code
func (o *GetPostgresPartitionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get postgres partitions default response has a 3xx status code
func (o *GetPostgresPartitionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get postgres partitions default response has a 4xx status code
func (o *GetPostgresPartitionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get postgres partitions default response has a 5xx status code
func (o *GetPostgresPartitionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get postgres partitions default response a status code equal to that given
func (o *GetPostgresPartitionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get postgres partitions default response
func (o *GetPostgresPartitionsDefault) Code() int {
	return o._statusCode
}

func (o *GetPostgresPartitionsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/database/postgres/partitions][%d] getPostgresPartitions default %s", o._statusCode, payload)
}

func (o *GetPostgresPartitionsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/database/postgres/partitions][%d] getPostgresPartitions default %s", o._statusCode, payload)
}

func (o *GetPostgresPartitionsDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *GetPostgresPartitionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
