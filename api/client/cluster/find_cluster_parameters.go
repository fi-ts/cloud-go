// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewFindClusterParams creates a new FindClusterParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFindClusterParams() *FindClusterParams {
	return &FindClusterParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFindClusterParamsWithTimeout creates a new FindClusterParams object
// with the ability to set a timeout on a request.
func NewFindClusterParamsWithTimeout(timeout time.Duration) *FindClusterParams {
	return &FindClusterParams{
		timeout: timeout,
	}
}

// NewFindClusterParamsWithContext creates a new FindClusterParams object
// with the ability to set a context for a request.
func NewFindClusterParamsWithContext(ctx context.Context) *FindClusterParams {
	return &FindClusterParams{
		Context: ctx,
	}
}

// NewFindClusterParamsWithHTTPClient creates a new FindClusterParams object
// with the ability to set a custom HTTPClient for a request.
func NewFindClusterParamsWithHTTPClient(client *http.Client) *FindClusterParams {
	return &FindClusterParams{
		HTTPClient: client,
	}
}

/* FindClusterParams contains all the parameters to send to the API endpoint
   for the find cluster operation.

   Typically these are written to a http.Request.
*/
type FindClusterParams struct {

	/* ID.

	   identifier of the cluster
	*/
	ID string

	/* ReturnMachines.

	   returns machines in the response

	   Default: true
	*/
	ReturnMachines *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the find cluster params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindClusterParams) WithDefaults() *FindClusterParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the find cluster params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindClusterParams) SetDefaults() {
	var (
		returnMachinesDefault = bool(true)
	)

	val := FindClusterParams{
		ReturnMachines: &returnMachinesDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the find cluster params
func (o *FindClusterParams) WithTimeout(timeout time.Duration) *FindClusterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the find cluster params
func (o *FindClusterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the find cluster params
func (o *FindClusterParams) WithContext(ctx context.Context) *FindClusterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the find cluster params
func (o *FindClusterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the find cluster params
func (o *FindClusterParams) WithHTTPClient(client *http.Client) *FindClusterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the find cluster params
func (o *FindClusterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the find cluster params
func (o *FindClusterParams) WithID(id string) *FindClusterParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the find cluster params
func (o *FindClusterParams) SetID(id string) {
	o.ID = id
}

// WithReturnMachines adds the returnMachines to the find cluster params
func (o *FindClusterParams) WithReturnMachines(returnMachines *bool) *FindClusterParams {
	o.SetReturnMachines(returnMachines)
	return o
}

// SetReturnMachines adds the returnMachines to the find cluster params
func (o *FindClusterParams) SetReturnMachines(returnMachines *bool) {
	o.ReturnMachines = returnMachines
}

// WriteToRequest writes these params to a swagger request
func (o *FindClusterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.ReturnMachines != nil {

		// query param return-machines
		var qrReturnMachines bool

		if o.ReturnMachines != nil {
			qrReturnMachines = *o.ReturnMachines
		}
		qReturnMachines := swag.FormatBool(qrReturnMachines)
		if qReturnMachines != "" {

			if err := r.SetQueryParam("return-machines", qReturnMachines); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
