// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fi-ts/cloud-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// CreateMachineReservationReader is a Reader for the CreateMachineReservation structure.
type CreateMachineReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMachineReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateMachineReservationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewCreateMachineReservationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateMachineReservationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateMachineReservationCreated creates a CreateMachineReservationCreated with default headers values
func NewCreateMachineReservationCreated() *CreateMachineReservationCreated {
	return &CreateMachineReservationCreated{}
}

/*
CreateMachineReservationCreated describes a response with status code 201, with default header values.

Created
*/
type CreateMachineReservationCreated struct {
	Payload *models.V1MachineReservationResponse
}

// IsSuccess returns true when this create machine reservation created response has a 2xx status code
func (o *CreateMachineReservationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create machine reservation created response has a 3xx status code
func (o *CreateMachineReservationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create machine reservation created response has a 4xx status code
func (o *CreateMachineReservationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create machine reservation created response has a 5xx status code
func (o *CreateMachineReservationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create machine reservation created response a status code equal to that given
func (o *CreateMachineReservationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create machine reservation created response
func (o *CreateMachineReservationCreated) Code() int {
	return 201
}

func (o *CreateMachineReservationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservationCreated %s", 201, payload)
}

func (o *CreateMachineReservationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservationCreated %s", 201, payload)
}

func (o *CreateMachineReservationCreated) GetPayload() *models.V1MachineReservationResponse {
	return o.Payload
}

func (o *CreateMachineReservationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1MachineReservationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMachineReservationConflict creates a CreateMachineReservationConflict with default headers values
func NewCreateMachineReservationConflict() *CreateMachineReservationConflict {
	return &CreateMachineReservationConflict{}
}

/*
CreateMachineReservationConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateMachineReservationConflict struct {
	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create machine reservation conflict response has a 2xx status code
func (o *CreateMachineReservationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create machine reservation conflict response has a 3xx status code
func (o *CreateMachineReservationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create machine reservation conflict response has a 4xx status code
func (o *CreateMachineReservationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create machine reservation conflict response has a 5xx status code
func (o *CreateMachineReservationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create machine reservation conflict response a status code equal to that given
func (o *CreateMachineReservationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create machine reservation conflict response
func (o *CreateMachineReservationConflict) Code() int {
	return 409
}

func (o *CreateMachineReservationConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservationConflict %s", 409, payload)
}

func (o *CreateMachineReservationConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservationConflict %s", 409, payload)
}

func (o *CreateMachineReservationConflict) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreateMachineReservationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMachineReservationDefault creates a CreateMachineReservationDefault with default headers values
func NewCreateMachineReservationDefault(code int) *CreateMachineReservationDefault {
	return &CreateMachineReservationDefault{
		_statusCode: code,
	}
}

/*
CreateMachineReservationDefault describes a response with status code -1, with default header values.

Error
*/
type CreateMachineReservationDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create machine reservation default response has a 2xx status code
func (o *CreateMachineReservationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create machine reservation default response has a 3xx status code
func (o *CreateMachineReservationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create machine reservation default response has a 4xx status code
func (o *CreateMachineReservationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create machine reservation default response has a 5xx status code
func (o *CreateMachineReservationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create machine reservation default response a status code equal to that given
func (o *CreateMachineReservationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create machine reservation default response
func (o *CreateMachineReservationDefault) Code() int {
	return o._statusCode
}

func (o *CreateMachineReservationDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservation default %s", o._statusCode, payload)
}

func (o *CreateMachineReservationDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/project/reservation/machine][%d] createMachineReservation default %s", o._statusCode, payload)
}

func (o *CreateMachineReservationDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreateMachineReservationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
