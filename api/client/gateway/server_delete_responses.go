// Code generated by go-swagger; DO NOT EDIT.

package gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fi-ts/cloud-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// ServerDeleteReader is a Reader for the ServerDelete structure.
type ServerDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServerDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServerDeleteOK creates a ServerDeleteOK with default headers values
func NewServerDeleteOK() *ServerDeleteOK {
	return &ServerDeleteOK{}
}

/* ServerDeleteOK describes a response with status code 200, with default header values.

gateway server deleted
*/
type ServerDeleteOK struct {
	Payload *models.V1GatewayID
}

func (o *ServerDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /gateway/v1/projects/{projectuid}/servers/{name}][%d] serverDeleteOK  %+v", 200, o.Payload)
}
func (o *ServerDeleteOK) GetPayload() *models.V1GatewayID {
	return o.Payload
}

func (o *ServerDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GatewayID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerDeleteDefault creates a ServerDeleteDefault with default headers values
func NewServerDeleteDefault(code int) *ServerDeleteDefault {
	return &ServerDeleteDefault{
		_statusCode: code,
	}
}

/* ServerDeleteDefault describes a response with status code -1, with default header values.

error
*/
type ServerDeleteDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// Code gets the status code for the server delete default response
func (o *ServerDeleteDefault) Code() int {
	return o._statusCode
}

func (o *ServerDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /gateway/v1/projects/{projectuid}/servers/{name}][%d] serverDelete default  %+v", o._statusCode, o.Payload)
}
func (o *ServerDeleteDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *ServerDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
