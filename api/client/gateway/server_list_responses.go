// Code generated by go-swagger; DO NOT EDIT.

package gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fi-ts/cloud-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// ServerListReader is a Reader for the ServerList structure.
type ServerListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServerListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServerListOK creates a ServerListOK with default headers values
func NewServerListOK() *ServerListOK {
	return &ServerListOK{}
}

/* ServerListOK describes a response with status code 200, with default header values.

gateway servers fetched
*/
type ServerListOK struct {
	Payload []*models.V1GatewayServerResponse
}

func (o *ServerListOK) Error() string {
	return fmt.Sprintf("[GET /gateway/v1/projects/{projectuid}/servers][%d] serverListOK  %+v", 200, o.Payload)
}
func (o *ServerListOK) GetPayload() []*models.V1GatewayServerResponse {
	return o.Payload
}

func (o *ServerListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerListDefault creates a ServerListDefault with default headers values
func NewServerListDefault(code int) *ServerListDefault {
	return &ServerListDefault{
		_statusCode: code,
	}
}

/* ServerListDefault describes a response with status code -1, with default header values.

error
*/
type ServerListDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// Code gets the status code for the server list default response
func (o *ServerListDefault) Code() int {
	return o._statusCode
}

func (o *ServerListDefault) Error() string {
	return fmt.Sprintf("[GET /gateway/v1/projects/{projectuid}/servers][%d] serverList default  %+v", o._statusCode, o.Payload)
}
func (o *ServerListDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *ServerListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
