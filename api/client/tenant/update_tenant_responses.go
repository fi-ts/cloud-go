// Code generated by go-swagger; DO NOT EDIT.

package tenant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/metal-stack/cloud-go/api/models"
)

// UpdateTenantReader is a Reader for the UpdateTenant structure.
type UpdateTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateTenantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 412:
		result := NewUpdateTenantPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateTenantDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateTenantOK creates a UpdateTenantOK with default headers values
func NewUpdateTenantOK() *UpdateTenantOK {
	return &UpdateTenantOK{}
}

/*UpdateTenantOK handles this case with default header values.

Updated
*/
type UpdateTenantOK struct {
	Payload *models.V1TenantResponse
}

func (o *UpdateTenantOK) Error() string {
	return fmt.Sprintf("[POST /v1/tenant][%d] updateTenantOK  %+v", 200, o.Payload)
}

func (o *UpdateTenantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1TenantResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantPreconditionFailed creates a UpdateTenantPreconditionFailed with default headers values
func NewUpdateTenantPreconditionFailed() *UpdateTenantPreconditionFailed {
	return &UpdateTenantPreconditionFailed{}
}

/*UpdateTenantPreconditionFailed handles this case with default header values.

OptimisticLock
*/
type UpdateTenantPreconditionFailed struct {
	Payload *models.HttperrorsHTTPErrorResponse
}

func (o *UpdateTenantPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /v1/tenant][%d] updateTenantPreconditionFailed  %+v", 412, o.Payload)
}

func (o *UpdateTenantPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantDefault creates a UpdateTenantDefault with default headers values
func NewUpdateTenantDefault(code int) *UpdateTenantDefault {
	return &UpdateTenantDefault{
		_statusCode: code,
	}
}

/*UpdateTenantDefault handles this case with default header values.

Error
*/
type UpdateTenantDefault struct {
	_statusCode int

	Payload *models.HttperrorsHTTPErrorResponse
}

// Code gets the status code for the update tenant default response
func (o *UpdateTenantDefault) Code() int {
	return o._statusCode
}

func (o *UpdateTenantDefault) Error() string {
	return fmt.Sprintf("[POST /v1/tenant][%d] updateTenant default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateTenantDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
